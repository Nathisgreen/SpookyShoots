package com.me.TeamName;

import com.badlogic.gdx.graphics.Color;
import com.badlogic.gdx.math.Rectangle;
import com.badlogic.gdx.math.Vector2;
import com.badlogic.gdx.utils.Array;
import com.me.TeamName.Engine.RenderableEntity;
import com.me.TeamName.Engine.Renderer;

public class Ghost extends RenderableEntity {
	private Vector2 moveTo;
	public Array<Vector2> possiblePossitions = new Array<Vector2>();
	public float velocity = 50;
	
	//-Constructors-//
	protected Ghost(){
		super("Entity");
		initialize();
		visible = false;
		if(possiblePossitions.size == 0){
			possiblePossitions.add(new Vector2(
				(int)(Math.random()*1024),
				(int)(Math.random()*768)
			));
			possiblePossitions.add(new Vector2(
				(int)(Math.random()*1024),
				(int)(Math.random()*768)
			));
			possiblePossitions.add(new Vector2(
				(int)(Math.random()*1024),
				(int)(Math.random()*768)
			));
		}
		setLayer("Player");
		moveTo = possiblePossitions.get((int)(Math.random()*possiblePossitions.size));
		createFromSprite("ghost", "data/ghostcartoon.png");
	}
	
	public void toggleShowGost(){
		visible = !visible;
	}

	private void initialize(){
		position = new Vector2(0,0);
		origin = new Vector2(0,0);
		scale = new Vector2(1,1);
		boundingBox = new Rectangle();
		sourceRectangle = new Rectangle();
		visible = true;
		active = true;
		rotation = 0;
		alpha = 0.5f;
		layer = "Default";
		color = new Color(1.0f, 1.0f, 1.0f, 1.0f);
	}
	
	@Override
	public void Update(float dt){
		//If you don't want your boundingBox auto size of sprite don't call super and
		//call this method in your update with the values you want
		
		updateBoundingBox(position.x - (origin.x * scale.x), position.y - (origin.y * scale.y),
			size.x * scale.x, size.y * scale.y);
		
		if(moveTo.x < position.x){
			position.x -= velocity * dt;
		}
		if(moveTo.x > position.x){
			position.x += velocity * dt;
		}
		if(moveTo.y < position.y){
			position.y -= velocity * dt;
		}
		if(moveTo.y > position.y){
			position.y += velocity * dt;
		}
		
		if(moveTo.equals(position)){
			moveTo = possiblePossitions.get((int)(Math.random()*possiblePossitions.items.length));
		}
	}
	
	public void Draw(){	
		if (visible){
			Renderer.drawSprite(textureRegion, position, getSourceRectangle(),
					size, rotation, origin, scale.x, scale.y, alpha, color, layer);
		}
	}
}
